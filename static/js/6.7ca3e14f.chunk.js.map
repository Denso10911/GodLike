{"version":3,"sources":["Compotents/Pages/Messages/List/List.jsx","Compotents/Pages/Messages/Dialog/Dialog.jsx","Compotents/Pages/Messages/SendMessageForm/SendMessageForm.jsx","Compotents/Pages/Messages/Messages.jsx","Compotents/Pages/Messages/MessagesContainer.jsx"],"names":["List","props","className","to","id","name","Dialog","text","SendMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","Messages","listsElement","messages","lists","map","l","dialogElement","dialogs","d","message","sentNewMessageAction","compose","connect","state","messagesPage","isAuth","login","dispatch","action","sentNewMessageActionCreator","withAuthRedirecrt"],"mappings":"+OAWeA,EARF,SAACC,GACZ,OACE,qBAAKC,UAAU,aAAf,SACE,cAAC,IAAD,CAASC,GAAI,aAAeF,EAAMG,GAAlC,SAAuCH,EAAMI,UCApCC,G,OAJA,SAACL,GACd,OAAO,qBAAKC,UAAU,UAAf,SAA0BD,EAAMM,S,yBCS1BC,EAFcC,YAAU,CAAEC,KAAM,uBAAlBD,EARL,SAACR,GACvB,OACE,uBAAMU,SAAUV,EAAMW,aAAcV,UAAU,WAA9C,UACE,cAACW,EAAA,EAAD,CAAOR,KAAK,UAAUS,UAAU,WAAWC,YAAY,qBAAqBb,UAAU,cACtF,gDCiBSc,EAjBE,SAACf,GAChB,IAAIgB,EAAehB,EAAMiB,SAASC,MAAMC,KAAI,SAACC,GAAD,OAAO,cAAC,EAAD,CAAMhB,KAAMgB,EAAEhB,KAAMD,GAAIiB,EAAEjB,QACzEkB,EAAgBrB,EAAMiB,SAASK,QAAQH,KAAI,SAACI,GAAD,OAAO,cAAC,EAAD,CAAQjB,KAAMiB,EAAEjB,UAItE,OACE,sBAAKL,UAAU,WAAf,UACE,qBAAKA,UAAU,OAAf,SAAuBe,IACvB,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,SAAf,SAAyBoB,IACzB,cAAC,EAAD,CAAsBX,SAPH,SAACc,GAAD,OAAaxB,EAAMyB,qBAAqBD,EAAQA,mBCY5DE,sBAAQC,aAhBC,SAACC,GACvB,MAAO,CACLX,SAAUW,EAAMC,aAChBC,OAAQF,EAAMG,MAAMD,WAIG,SAACE,GAC1B,MAAO,CACLP,qBAAsB,SAACD,GACrB,IAAIS,EAASC,YAA4BV,GACzCQ,EAASC,QAKsDE,IAAtDT,CAAyEX","file":"static/js/6.7ca3e14f.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom'\r\nimport './List.css'\r\n\r\nconst List = (props) => {\r\n  return (\r\n    <div className=\"list__item\">\r\n      <NavLink to={'/messages/' + props.id}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List\r\n","import './Dialog.css'\r\n\r\nconst Dialog = (props) => {\r\n  return <div className=\"message\">{props.text}</div>\r\n}\r\n\r\nexport default Dialog\r\n","import { Field, reduxForm } from 'redux-form'\r\n\r\nconst SendMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className='sentArea'>\r\n      <Field name='message' component='textarea' placeholder='Write your message' className='text_area' />\r\n      <button>Send</button>\r\n    </form>\r\n  )\r\n}\r\nconst SendMessageFormRedux = reduxForm({ form: 'forumAddMessageForm' })(SendMessageForm)\r\n\r\nexport default SendMessageFormRedux\r\n","import './Messages.css'\r\nimport List from './List/List'\r\nimport Dialog from './Dialog/Dialog'\r\nimport React from 'react'\r\nimport SendMessageFormRedux from './SendMessageForm/SendMessageForm'\r\n\r\nconst Messages = (props) => {\r\n  let listsElement = props.messages.lists.map((l) => <List name={l.name} id={l.id} />)\r\n  let dialogElement = props.messages.dialogs.map((d) => <Dialog text={d.text} />)\r\n\r\n  let onMessageSentClick = (message) => props.sentNewMessageAction(message.message)\r\n\r\n  return (\r\n    <div className='messages'>\r\n      <div className='list'>{listsElement}</div>\r\n      <div className='dialog__wraper'>\r\n        <div className='dialog'>{dialogElement}</div>\r\n        <SendMessageFormRedux onSubmit={onMessageSentClick} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Messages\r\n","import { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { withAuthRedirecrt } from '../../../hoc/AuthHoc'\r\nimport { sentNewMessageActionCreator } from '../../../Redux/MessagesReducer'\r\nimport Messages from './Messages'\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    messages: state.messagesPage,\r\n    isAuth: state.login.isAuth,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sentNewMessageAction: (message) => {\r\n      let action = sentNewMessageActionCreator(message)\r\n      dispatch(action)\r\n    },\r\n  }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirecrt)(Messages)\r\n"],"sourceRoot":""}